// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/money-hub/MoneyDodo.service/deal/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetUserDealByStateEndpoint endpoint.Endpoint
	GetDealByDIDEndpoint       endpoint.Endpoint
	GetDealByStateEndpoint     endpoint.Endpoint
	PostAcceptDealEndpoint     endpoint.Endpoint
	PutDealStateEndpoint       endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.DealService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetDealByDIDEndpoint:       MakeGetDealByDIDEndpoint(s),
		GetDealByStateEndpoint:     MakeGetDealByStateEndpoint(s),
		GetUserDealByStateEndpoint: MakeGetUserDealByStateEndpoint(s),
		PostAcceptDealEndpoint:     MakePostAcceptDealEndpoint(s),
		PutDealStateEndpoint:       MakePutDealStateEndpoint(s),
	}
	for _, m := range mdw["GetUserDealByState"] {
		eps.GetUserDealByStateEndpoint = m(eps.GetUserDealByStateEndpoint)
	}
	for _, m := range mdw["GetDealByDID"] {
		eps.GetDealByDIDEndpoint = m(eps.GetDealByDIDEndpoint)
	}
	for _, m := range mdw["GetDealByState"] {
		eps.GetDealByStateEndpoint = m(eps.GetDealByStateEndpoint)
	}
	for _, m := range mdw["PostAcceptDeal"] {
		eps.PostAcceptDealEndpoint = m(eps.PostAcceptDealEndpoint)
	}
	for _, m := range mdw["PutDealState"] {
		eps.PutDealStateEndpoint = m(eps.PutDealStateEndpoint)
	}
	return eps
}
