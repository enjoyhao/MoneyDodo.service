{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This documentation describes example APIs found under https://github.com/money-hub/MoneyDodo.service",
    "title": "money-hub MoneyDodo/cpt",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/tasks": {
      "get": {
        "description": "Get all task of the user. You need to specify the userId and taskId.",
        "tags": [
          "cpt"
        ],
        "summary": "Get all tasks of the user (with id=userId).",
        "operationId": "swaggGetAllReq",
        "responses": {
          "200": {
            "$ref": "#/responses/swaggTasksResp"
          },
          "400": {
            "$ref": "#/responses/swaggBadReq"
          }
        }
      },
      "post": {
        "description": "Create a task. Also, you need to specify the userId and taskId.",
        "tags": [
          "cpt"
        ],
        "summary": "Create a task.",
        "operationId": "swaggPostReq",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/swaggTaskResp"
          },
          "400": {
            "$ref": "#/responses/swaggBadReq"
          }
        }
      }
    },
    "/api/tasks/{taskId}": {
      "get": {
        "description": "Get the specical task. You need to specify the userId and taskId.",
        "tags": [
          "cpt"
        ],
        "summary": "Get the specical task of the user (with id=userId).",
        "operationId": "swaggGetSpecReq",
        "parameters": [
          {
            "type": "string",
            "description": "id of task",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/swaggTaskResp"
          },
          "400": {
            "$ref": "#/responses/swaggBadReq"
          }
        }
      }
    },
    "/api/tasks/{taskId}?action={action}": {
      "put": {
        "description": "Update the task information. Also, you need to specify the user ID and task ID.",
        "tags": [
          "cpt"
        ],
        "summary": "Update the task information",
        "operationId": "swaggPutReq",
        "parameters": [
          {
            "type": "string",
            "description": "id of task",
            "name": "taskId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "action can be one of \"release\", \"claim\" and \"finish\"",
            "name": "action",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/swaggNoReturnValue"
          },
          "400": {
            "$ref": "#/responses/swaggBadReq"
          }
        }
      }
    },
    "/api/users/{userId}/tasks/{taskId}?status={status}": {
      "delete": {
        "description": "When status is equal to \"non-released\" or \"finished\", it means the creator want to delete it. When status is equal to \"released\", it means the creator want to cancel to release it. When status is equal to \"claimed\", it means the recipient want to cancel to claim it. Also, you need to specify the user ID and task ID.",
        "tags": [
          "cpt"
        ],
        "summary": "Delete\\Cancel to Release\\Cancel to Claim a task.",
        "operationId": "swaggDeleteReq",
        "parameters": [
          {
            "description": "id of task",
            "name": "taskId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "state can be one of \"non-released\", \"released\", \"claimed\" and \"finished\"",
            "name": "state",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/swaggNoReturnValue"
          },
          "400": {
            "$ref": "#/responses/swaggBadReq"
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "confirmFinish": {
          "type": "boolean",
          "x-go-name": "ConfirmFinish"
        },
        "cutoff": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Cutoff"
        },
        "enddate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Enddate"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "pubdate": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Pubdate"
        },
        "publisher": {
          "type": "string",
          "x-go-name": "Publisher"
        },
        "recipient": {
          "type": "string",
          "x-go-name": "Recipient"
        },
        "recipientFinish": {
          "type": "boolean",
          "x-go-name": "RecipientFinish"
        },
        "restrain": {
          "type": "string",
          "x-go-name": "Restrain"
        },
        "reward": {
          "type": "number",
          "format": "double",
          "x-go-name": "Reward"
        },
        "state": {
          "type": "string",
          "x-go-name": "State"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/money-hub/MoneyDodo.service/model"
    },
    "User": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "format": "double",
          "x-go-name": "Balance"
        },
        "certificationStatus": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CertificationStatus"
        },
        "certifiedPic": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          },
          "x-go-name": "CertifiedPic"
        },
        "creditScore": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreditScore"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "icon": {
          "type": "string",
          "x-go-name": "Icon"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "introduction": {
          "type": "string",
          "x-go-name": "Introduction"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        },
        "sId": {
          "type": "string",
          "x-go-name": "SId"
        }
      },
      "x-go-package": "github.com/money-hub/MoneyDodo.service/model"
    }
  },
  "responses": {
    "swaggAuthOfAdminResp": {
      "description": "HTTP status code 200 and token in data",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Token",
            "type": "string",
            "x-go-name": "Token"
          },
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "Boolean true/false",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggAuthOfUserResp": {
      "description": "HTTP status code 200 and token in data",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Token",
            "type": "string",
            "x-go-name": "Token"
          },
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "Boolean true/false",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggBadReq": {
      "description": "Error Fail",
      "schema": {
        "type": "object",
        "properties": {
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "HTTP Status Code 200",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggNoReturnValue": {
      "description": "HTTP status code 200 and no return value",
      "schema": {
        "type": "object",
        "properties": {
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "HTTP Status Code 200",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggTaskResp": {
      "description": "HTTP status code 200 and task model in data",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Task"
          },
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "Boolean true/false",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggTasksResp": {
      "description": "HTTP status code 200 and an array of task models in data",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Tasks model",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Task"
            },
            "x-go-name": "Data"
          },
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "Boolean true/false",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggUserResp": {
      "description": "HTTP status code 200 and user model in data",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/User"
          },
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "Boolean true/false",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    },
    "swaggUsersResp": {
      "description": "HTTP status code 200 and an array of user models in data",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "description": "User model",
            "type": "array",
            "items": {
              "$ref": "#/definitions/User"
            },
            "x-go-name": "Data"
          },
          "errinfo": {
            "description": "Detailed error message",
            "type": "string",
            "x-go-name": "Errinfo"
          },
          "status": {
            "description": "Boolean true/false",
            "type": "boolean",
            "x-go-name": "Status"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}