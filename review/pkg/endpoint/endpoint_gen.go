// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/money-hub/MoneyDodo.service/review/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	PostReviewEndpoint endpoint.Endpoint
	GetReviewEndpoint  endpoint.Endpoint
	GetReviewsEndpoint endpoint.Endpoint
	PutReviewEndpoint  endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.ReviewService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetReviewEndpoint:  MakeGetReviewEndpoint(s),
		GetReviewsEndpoint: MakeGetReviewsEndpoint(s),
		PostReviewEndpoint: MakePostReviewEndpoint(s),
		PutReviewEndpoint:  MakePutReviewEndpoint(s),
	}
	for _, m := range mdw["PostReview"] {
		eps.PostReviewEndpoint = m(eps.PostReviewEndpoint)
	}
	for _, m := range mdw["GetReview"] {
		eps.GetReviewEndpoint = m(eps.GetReviewEndpoint)
	}
	for _, m := range mdw["GetReviews"] {
		eps.GetReviewsEndpoint = m(eps.GetReviewsEndpoint)
	}
	for _, m := range mdw["PutReview"] {
		eps.PutReviewEndpoint = m(eps.PutReviewEndpoint)
	}
	return eps
}
