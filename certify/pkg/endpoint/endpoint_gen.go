// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/money-hub/MoneyDodo.service/certify/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetAuthInfoEndpoint      endpoint.Endpoint
	PostAuthInfoEndpoint     endpoint.Endpoint
	GetAllUnCertifyEndpoint  endpoint.Endpoint
	GetUnCertifyInfoEndpoint endpoint.Endpoint
	PostCertifyStateEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.CertifyService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetAllUnCertifyEndpoint:  MakeGetAllUnCertifyEndpoint(s),
		GetAuthInfoEndpoint:      MakeGetAuthInfoEndpoint(s),
		GetUnCertifyInfoEndpoint: MakeGetUnCertifyInfoEndpoint(s),
		PostAuthInfoEndpoint:     MakePostAuthInfoEndpoint(s),
		PostCertifyStateEndpoint: MakePostCertifyStateEndpoint(s),
	}
	for _, m := range mdw["GetAuthInfo"] {
		eps.GetAuthInfoEndpoint = m(eps.GetAuthInfoEndpoint)
	}
	for _, m := range mdw["PostAuthInfo"] {
		eps.PostAuthInfoEndpoint = m(eps.PostAuthInfoEndpoint)
	}
	for _, m := range mdw["GetAllUnCertify"] {
		eps.GetAllUnCertifyEndpoint = m(eps.GetAllUnCertifyEndpoint)
	}
	for _, m := range mdw["GetUnCertifyInfo"] {
		eps.GetUnCertifyInfoEndpoint = m(eps.GetUnCertifyInfoEndpoint)
	}
	for _, m := range mdw["PostCertifyState"] {
		eps.PostCertifyStateEndpoint = m(eps.PostCertifyStateEndpoint)
	}
	return eps
}
